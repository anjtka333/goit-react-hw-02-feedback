{"version":3,"sources":["components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","App.js","index.js","components/Statistics/Statistics.module.scss","components/FeedbackOptions/FeedbackOptions.module.scss"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","s","ulStyle","Section","title","children","FeedbackOptions","options","onLeaveFeedback","Object","entries","map","item","id","button","onClick","name","Notification","message","App","state","handleIncrement","target","setState","prevState","this","Math","round","countTotalFeedback","countPositiveFeedbackPercentage","Component","defaultProps","initialValue","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"gRAkCeA,EA/BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,mCACE,qBAAIC,UAAWC,IAAEC,QAAjB,UACE,uCACO,qCAAQP,QAEf,yCACS,qCAAQC,QAEjB,sCACM,+BAAOC,OAEb,uCACO,qCAAQC,QAEf,0CACU,qCAAQC,KADlB,aCHOI,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,M,gBCgBQC,EAnBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAWlC,OAVmBC,OAAOC,QAAQH,GAASI,KAAI,SAACC,EAAMC,GAAP,OAC7C,wBACEb,UAAWC,IAAEa,OAEbC,QAASP,EACTQ,KAAMJ,EAAK,GAJb,SAMGA,EAAK,IAJDC,OCEII,EAPM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCEPC,E,4MAMJC,MAAQ,CACNzB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPwB,gBAAkB,YAAiB,IAAdC,EAAa,EAAbA,OACnB,EAAKC,UAAS,SAACC,GACb,IAAQR,EAASM,EAATN,KACR,OAAO,eAAGA,EAAOQ,EAAUR,GAAQ,O,wDAIvC,WAEE,OADcS,KAAKL,MAAMzB,KAAO8B,KAAKL,MAAMxB,QAAU6B,KAAKL,MAAMvB,M,6CAIlE,WAIE,OAHiB6B,KAAKC,MACnBF,KAAKL,MAAMzB,KAAO8B,KAAKG,qBAAwB,O,oBAKpD,WACE,MAA+BH,KAAKL,MAA5BzB,EAAR,EAAQA,KAAME,EAAd,EAAcA,IAAKD,EAAnB,EAAmBA,QACnB,OACE,qCACE,cAAC,EAAD,CAASQ,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,QAASkB,KAAKL,MACdZ,gBAAiBiB,KAAKJ,oBAG1B,cAAC,EAAD,CAASjB,MAAM,aAAf,SACiC,IAA9BqB,KAAKG,qBACJ,cAAC,EAAD,CACEjC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO2B,KAAKG,qBACZ7B,mBAAoB0B,KAAKI,oCAG3B,cAAC,EAAD,CAAcX,QAAQ,+B,GAnDhBY,aAAZX,EAEGY,aAAe,CACpBC,aAAc,GAwDHb,QC3Dfc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,QAAU,8B,kBCA5BD,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.6e9a9ea9.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport s from \"./Statistics.module.scss\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <ul className={s.ulStyle}>\r\n        <li>\r\n          Good <span> {good}</span>\r\n        </li>\r\n        <li>\r\n          Neutral<span> {neutral}</span>\r\n        </li>\r\n        <li>\r\n          Bad <span>{bad}</span>\r\n        </li>\r\n        <li>\r\n          Total<span> {total}</span>\r\n        </li>\r\n        <li>\r\n          Positive<span> {positivePercentage}</span>%\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\nexport default Statistics;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.any,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./FeedbackOptions.module.scss\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  const buttonName = Object.entries(options).map((item, id) => (\r\n    <button\r\n      className={s.button}\r\n      key={id}\r\n      onClick={onLeaveFeedback}\r\n      name={item[0]}\r\n    >\r\n      {item[0]}\r\n    </button>\r\n  ));\r\n  return buttonName;\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.shape(),\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\nexport default Notification;\r\n","import { Component } from \"react\";\r\nimport Statistics from \"./components/Statistics/Statistics\";\r\nimport Section from \"./components/Section/Section\";\r\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\r\nimport Notification from \"./components/Notification/Notification\";\r\nclass App extends Component {\r\n  // static propTypes = {};\r\n  static defaultProps = {\r\n    initialValue: 0,\r\n  }; //навіщо прописувати, якщо не можна писати в state\r\n\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleIncrement = ({ target }) => {\r\n    this.setState((prevState) => {\r\n      const { name } = target;\r\n      return { [name]: prevState[name] + 1 };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback() {\r\n    const total = this.state.good + this.state.neutral + this.state.bad;\r\n    return total;\r\n  }\r\n\r\n  countPositiveFeedbackPercentage() {\r\n    const positive = Math.round(\r\n      (this.state.good / this.countTotalFeedback()) * 100\r\n    );\r\n    return positive;\r\n  }\r\n\r\n  render() {\r\n    const { good, bad, neutral } = this.state;\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={this.state}\r\n            onLeaveFeedback={this.handleIncrement}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {this.countTotalFeedback() !== 0 ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={this.countTotalFeedback()}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ulStyle\":\"Statistics_ulStyle__WnpRe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__wQVE-\"};"],"sourceRoot":""}